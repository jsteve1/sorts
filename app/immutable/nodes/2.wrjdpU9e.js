import{a as I,t as q,c as ka}from"../chunks/disclose-version.B6yp_qhu.js";import"../chunks/legacy.BL6LWlIL.js";import{R as Ta,G as Ra,v as Q,K as Ye,w as Aa,F as Es,a9 as Ws,I as Ma,J as bs,L as Ke,P as re,at as Se,M as qs,N as Ls,O as Oa,C as Cs,au as $a,av as Ia,a8 as za,aw as Ea,ax as Wa,T as qa,a5 as La,Z as Da,o as Na,z as ks,ay as Ua,az as Fa,aA as Ba,a2 as Ha,aB as Va,aC as ja,E as Ts,aD as Ga,aE as Ya,b as Ka,ac as Qa,ab as Ds,p as Ja,t as $,j as Xa,aF as Za,g as a,aG as y,aH as Pa,k as m,l as f,s as w,aI as Rs,i as et,an as As}from"../chunks/runtime.B3L5aQa2.js";import{a as st,l as Ns,b as at,e as B,s as b}from"../chunks/render.BX_BIPW9.js";import{a as tt,o as nt,i as j}from"../chunks/index-client.Jpn8a_ft.js";import{i as it}from"../chunks/lifecycle.qnaomzrU.js";function xe(v,d){return d}function ot(v,d,s,_){for(var h=[],r=d.length,k=0;k<r;k++)Ia(d[k].e,h,!0);var L=r>0&&h.length===0&&s!==null;if(L){var F=s.parentNode;za(F),F.append(s),_.clear(),ae(v,d[0].prev,d[r-1].next)}Ea(h,()=>{for(var D=0;D<r;D++){var S=d[D];L||(_.delete(S.k),ae(v,S.prev,S.next)),Wa(S.e,!L)}})}function ye(v,d,s,_,h,r=null){var k=v,L={flags:d,items:new Map,first:null};{var F=v;k=Q?Ye(qa(F)):F.appendChild(Ta())}Q&&Aa();var D=null,S=!1;Ra(()=>{var z=s(),R=Es(z)?z:z==null?[]:Ws(z),C=R.length;if(S&&C===0)return;S=C===0;let H=!1;if(Q){var Z=k.data===Ma;Z!==(C===0)&&(k=bs(),Ye(k),Ke(!1),H=!0)}if(Q){for(var Y=null,M,N=0;N<C;N++){if(re.nodeType===8&&re.data===La){k=re,H=!0,Ke(!1);break}var ie=R[N],J=_(ie,N);M=Us(re,L,Y,null,ie,J,N,h,d),L.items.set(J,M),Y=M}C>0&&Ye(bs())}if(!Q){var V=Da;lt(R,L,k,h,d,(V.f&Se)!==0,_)}r!==null&&(C===0?D?qs(D):D=Ls(()=>r(k)):D!==null&&Oa(D,()=>{D=null})),H&&Ke(!0),s()}),Q&&(k=re)}function lt(v,d,s,_,h,r,k){var L=v.length,F=d.items,D=d.first,S=D,z,R=null,C=[],H=[],Z,Y,M,N;for(N=0;N<L;N+=1){if(Z=v[N],Y=k(Z,N),M=F.get(Y),M===void 0){var ie=S?S.e.nodes_start:s;R=Us(ie,d,R,R===null?d.first:R.next,Z,Y,N,_,h),F.set(Y,R),C=[],H=[],S=R.next;continue}if(pt(M,Z,N),M.e.f&Se&&qs(M.e),M!==S){if(z!==void 0&&z.has(M)){if(C.length<H.length){var J=H[0],V;R=J.prev;var oe=C[0],ce=C[C.length-1];for(V=0;V<C.length;V+=1)Ms(C[V],J,s);for(V=0;V<H.length;V+=1)z.delete(H[V]);ae(d,oe.prev,ce.next),ae(d,R,oe),ae(d,ce,J),S=J,R=ce,N-=1,C=[],H=[]}else z.delete(M),Ms(M,S,s),ae(d,M.prev,M.next),ae(d,M,R===null?d.first:R.next),ae(d,R,M),R=M;continue}for(C=[],H=[];S!==null&&S.k!==Y;)(r||!(S.e.f&Se))&&(z??(z=new Set)).add(S),H.push(S),S=S.next;if(S===null)continue;M=S}C.push(M),R=M,S=M.next}if(S!==null||z!==void 0){for(var P=z===void 0?[]:Ws(z);S!==null;)(r||!(S.e.f&Se))&&P.push(S),S=S.next;var be=P.length;if(be>0){var Ce=L===0?s:null;ot(d,P,Ce,F)}}Cs.first=d.first&&d.first.e,Cs.last=R&&R.e}function pt(v,d,s,_){$a(v.v,d),v.i=s}function Us(v,d,s,_,h,r,k,L,F){var D=(F&Fa)!==0,S=(F&Ba)===0,z=D?S?Na(h):ks(h):h,R=F&Ua?ks(k):k,C={i:R,v:z,k:r,a:null,e:null,prev:s,next:_};try{return C.e=Ls(()=>L(v,z,R),Q),C.e.prev=s&&s.e,C.e.next=_&&_.e,s===null?d.first=C:(s.next=C,s.e.next=C.e),_!==null&&(_.prev=C,_.e.prev=C.e),C}finally{}}function Ms(v,d,s){for(var _=v.next?v.next.e.nodes_start:s,h=d?d.e.nodes_start:s,r=v.e.nodes_start;r!==_;){var k=Ha(r);h.before(r),r=k}}function ae(v,d,s){d===null?v.first=s:(d.next=s,d.e.next=s&&s.e),s!==null&&(s.prev=d,s.e.prev=d&&d.e)}function Os(v){if(Q){var d=!1,s=()=>{if(!d){if(d=!0,v.hasAttribute("value")){var _=v.value;te(v,"value",null),v.value=_}if(v.hasAttribute("checked")){var h=v.checked;te(v,"checked",null),v.checked=h}}};v.__on_r=s,Va(s),st()}}function te(v,d,s,_){var h=v.__attributes??(v.__attributes={});Q&&(h[d]=v.getAttribute(d),d==="src"||d==="srcset"||d==="href"&&v.nodeName==="LINK")||h[d]!==(h[d]=s)&&(d==="style"&&"__styles"in v&&(v.__styles={}),d==="loading"&&(v[ja]=s),s==null?v.removeAttribute(d):typeof s!="string"&&ct(v).includes(d)?v[d]=s:v.setAttribute(d,s))}var $s=new Map;function ct(v){var d=$s.get(v.nodeName);if(d)return d;$s.set(v.nodeName,d=[]);for(var s,_=Ts(v),h=Element.prototype;h!==_;){s=Ga(_);for(var r in s)s[r].set&&d.push(r);_=Ts(_)}return d}function G(v,d,s){if(s){if(v.classList.contains(d))return;v.classList.add(d)}else{if(!v.classList.contains(d))return;v.classList.remove(d)}}function Is(v,d,s=d){var _=Ya();Ns(v,"input",h=>{var r=h?v.defaultValue:v.value;r=Qe(v)?Je(r):r,s(r),_&&r!==(r=d())&&(v.value=r??"")}),(Q&&v.defaultValue!==v.value||Ka(d)==null&&v.value)&&s(Qe(v)?Je(v.value):v.value),Qa(()=>{var h=d();Qe(v)&&h===Je(v.value)||v.type==="date"&&!h&&!v.value||h!==v.value&&(v.value=h??"")})}function Qe(v){var d=v.type;return d==="number"||d==="range"}function Je(v){return v===""?null:+v}function Fs(v,d,s){if(v.multiple)return gt(v,d);for(var _ of v.options){var h=de(_);if(tt(h,d)){_.selected=!0;return}}(!s||d!==void 0)&&(v.selectedIndex=-1)}function vt(v,d){Ds(()=>{var s=new MutationObserver(()=>{var _=v.__value;Fs(v,_)});return s.observe(v,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["value"]}),()=>{s.disconnect()}})}function zs(v,d,s=d){var _=!0;Ns(v,"change",h=>{var r=h?"[selected]":":checked",k;if(v.multiple)k=[].map.call(v.querySelectorAll(r),de);else{var L=v.querySelector(r)??v.querySelector("option:not([disabled])");k=L&&de(L)}s(k)}),Ds(()=>{var h=d();if(Fs(v,h,_),_&&h===void 0){var r=v.querySelector(":checked");r!==null&&(h=de(r),s(h))}v.__value=h,_=!1}),vt(v)}function gt(v,d){for(var s of v.options)s.selected=~d.indexOf(de(s))}function de(v){return"__value"in v?v.__value:v.value}function rt(v){return function(...d){var s=d[0];return s.stopPropagation(),v==null?void 0:v.apply(this,d)}}function dt(v,d){var r;var s=(r=v.$$events)==null?void 0:r[d.type],_=Es(s)?s.slice():s==null?[]:[s];for(var h of _)h.call(this,d)}const ut=!0,Nt=Object.freeze(Object.defineProperty({__proto__:null,prerender:ut},Symbol.toStringTag,{value:"Module"})),se={bubble:{description:"A simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order.",timeComplexity:"O(n¬≤)",spaceComplexity:"O(1)"},quick:{description:"A divide-and-conquer algorithm that works by selecting a 'pivot' element and partitioning the array around it.",timeComplexity:"O(n log n)",spaceComplexity:"O(log n)"},merge:{description:"A divide-and-conquer algorithm that divides the array into smaller subarrays, sorts them, and then merges them.",timeComplexity:"O(n log n)",spaceComplexity:"O(n)"},insertion:{description:"Builds the final sorted array one item at a time by repeatedly inserting a new element into the sorted portion of the array.",timeComplexity:"O(n¬≤)",spaceComplexity:"O(1)"},selection:{description:"Divides the input list into a sorted and an unsorted region, and repeatedly selects the smallest element from the unsorted region.",timeComplexity:"O(n¬≤)",spaceComplexity:"O(1)"},heap:{description:"Uses a binary heap data structure to sort elements by repeatedly extracting the maximum element.",timeComplexity:"O(n log n)",spaceComplexity:"O(1)"},shell:{description:"An optimization of insertion sort that allows the exchange of items that are far apart, progressively reducing the gap between elements to be compared.",timeComplexity:"O(n log n) ~ O(n¬≤)",spaceComplexity:"O(1)"},counting:{description:"An integer sorting algorithm that works by counting the number of objects having distinct key values, then calculating their positions.",timeComplexity:"O(n + k)",spaceComplexity:"O(k)"},radix:{description:"Sorts integers by processing each digit position, starting from the least significant digit to the most significant digit.",timeComplexity:"O(d * (n + k))",spaceComplexity:"O(n + k)"},cocktail:{description:"A variation of bubble sort that sorts bidirectionally, bubbling both the largest and smallest values in each pass.",timeComplexity:"O(n¬≤)",spaceComplexity:"O(1)"},gnome:{description:"A simple sorting algorithm similar to insertion sort, but moving elements to their proper position by a series of swaps.",timeComplexity:"O(n¬≤)",spaceComplexity:"O(1)"},comb:{description:"An improvement over bubble sort that eliminates turtles (small values near the end) effectively.",timeComplexity:"O(n¬≤ / 2^p)",spaceComplexity:"O(1)"},cycle:{description:"An in-place sorting algorithm that minimizes memory writes by cycling through arrays to make the minimum number of moves.",timeComplexity:"O(n¬≤)",spaceComplexity:"O(1)"},pancake:{description:"Sorts by repeatedly flipping the prefix of the array (like flipping pancakes) until the array is sorted.",timeComplexity:"O(n¬≤)",spaceComplexity:"O(1)"}};var ft=q('<option class="svelte-1axggn9"> </option>'),mt=q('<div class="info-dropdown svelte-1axggn9"><h4 class="svelte-1axggn9"> </h4> <p class="description svelte-1axggn9"> </p> <div class="complexity-info svelte-1axggn9"><div class="complexity-item svelte-1axggn9"><span class="label svelte-1axggn9">Time:</span> <span class="value svelte-1axggn9"> </span></div> <div class="complexity-item svelte-1axggn9"><span class="label svelte-1axggn9">Space:</span> <span class="value svelte-1axggn9"> </span></div></div></div>'),wt=q('<option class="svelte-1axggn9"> </option>'),ht=q('<div class="info-dropdown svelte-1axggn9"><h4 class="svelte-1axggn9"> </h4> <p class="description svelte-1axggn9"> </p> <div class="complexity-info svelte-1axggn9"><div class="complexity-item svelte-1axggn9"><span class="label svelte-1axggn9">Time:</span> <span class="value svelte-1axggn9"> </span></div> <div class="complexity-item svelte-1axggn9"><span class="label svelte-1axggn9">Space:</span> <span class="value svelte-1axggn9"> </span></div></div></div>'),_t=q('<div class="algorithm-select svelte-1axggn9"><select class="svelte-1axggn9"></select> <div class="info-container svelte-1axggn9"><button class="help-button svelte-1axggn9">?</button> <!></div></div>'),xt=q('<span class="winner-badge svelte-1axggn9">Winner! üèÜ</span>'),yt=q('<div class="sort-label svelte-1axggn9"> <!></div>'),St=q('<div class="bar svelte-1axggn9"></div>'),bt=q('<span class="winner-badge svelte-1axggn9">Winner! üèÜ</span>'),Ct=q('<div class="bar svelte-1axggn9"></div>'),kt=q('<div class="sort-container secondary svelte-1axggn9"><div class="sort-label svelte-1axggn9"> <!></div> <div class="bars-container svelte-1axggn9"></div></div>'),Tt=q('<span class="winner-badge svelte-1axggn9">Winner! üèÜ</span>'),Rt=q('<span class="winner-badge svelte-1axggn9">Winner! üèÜ</span>'),At=q('<span class="recommendation svelte-1axggn9">Best for small arrays: Insertion Sort</span>'),Mt=q('<span class="recommendation svelte-1axggn9">Best for medium arrays: Quick/Merge Sort</span>'),Ot=q('<span class="recommendation svelte-1axggn9">Best for large arrays: Quick/Heap Sort</span>'),$t=q('<div class="modal-backdrop svelte-1axggn9"><div class="modal-content svelte-1axggn9"><div class="modal-header svelte-1axggn9"><h2 class="svelte-1axggn9">Sorting Competition Results</h2> <button class="close-btn svelte-1axggn9">&times;</button></div> <div class="modal-body svelte-1axggn9"><div class="winner-banner svelte-1axggn9"> </div> <div class="stats-grid svelte-1axggn9"><div class="stat-column svelte-1axggn9"><h3 class="svelte-1axggn9"> </h3> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9">Time:</span> <span class="value svelte-1axggn9"> </span></div> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9">Comparisons:</span> <span class="value svelte-1axggn9"> </span></div> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9">Swaps:</span> <span class="value svelte-1axggn9"> </span></div> <!></div> <div class="stat-column svelte-1axggn9"><h3 class="svelte-1axggn9"> </h3> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9">Time:</span> <span class="value svelte-1axggn9"> </span></div> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9">Comparisons:</span> <span class="value svelte-1axggn9"> </span></div> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9">Swaps:</span> <span class="value svelte-1axggn9"> </span></div> <!></div></div> <div class="analytics-grid svelte-1axggn9"><div class="analytics-section svelte-1axggn9"><h4 class="svelte-1axggn9">Performance Analysis</h4> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9">Speed Difference:</span> <span class="value svelte-1axggn9"> </span></div> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9">Comparison Ratio:</span> <span class="value svelte-1axggn9"> </span></div> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9">Memory Operations:</span> <span class="value svelte-1axggn9"> </span></div></div> <div class="analytics-section svelte-1axggn9"><h4 class="svelte-1axggn9">Complexity Analysis</h4> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9"> </span> <span class="value svelte-1axggn9"> </span></div> <div class="metric svelte-1axggn9"><span class="label svelte-1axggn9"> </span> <span class="value svelte-1axggn9"> </span></div></div> <div class="analytics-section svelte-1axggn9"><h4 class="svelte-1axggn9">Recommendations</h4> <div class="metric svelte-1axggn9"><!></div></div></div></div> <div class="modal-footer svelte-1axggn9"><button class="close-button svelte-1axggn9">Close</button></div></div></div>'),It=q('<div class="container svelte-1axggn9"><nav class="svelte-1axggn9"><div class="controls svelte-1axggn9"><div class="algorithm-selectors svelte-1axggn9"><div class="algorithm-select svelte-1axggn9"><select class="svelte-1axggn9"></select> <div class="info-container svelte-1axggn9"><button class="help-button svelte-1axggn9">?</button> <!></div></div> <!></div> <div class="slider-group svelte-1axggn9"><label class="svelte-1axggn9"> <input type="range" min="5" max="200" class="svelte-1axggn9"></label></div> <div class="slider-group svelte-1axggn9"><label class="svelte-1axggn9"> <input type="range" min="1" max="100" class="svelte-1axggn9"></label></div> <div class="button-group svelte-1axggn9"><button class="svelte-1axggn9">Start</button> <button class="stop-button svelte-1axggn9">Stop</button> <button class="svelte-1axggn9">Shuffle</button> <button class="compare-button svelte-1axggn9"> </button> <button class="theme-toggle svelte-1axggn9"> </button></div></div></nav> <div class="visualizer svelte-1axggn9"><div class="sort-container primary svelte-1axggn9"><!> <div class="bars-container svelte-1axggn9"></div></div> <!></div> <!></div>');function Ut(v,d){Ja(d,!1);let s=Pa({algorithm:"bubble",array:[],stats:{startTime:null,endTime:null,comparisons:0,swaps:0},currentIndices:[],isSorted:!1,primary:{algorithm:"bubble",array:[],stats:{startTime:null,endTime:null,comparisons:0,swaps:0},currentIndices:[],isSorted:!1},secondary:{algorithm:"quick",array:[],stats:{startTime:null,endTime:null,comparisons:0,swaps:0},currentIndices:[],isSorted:!1},viewMode:"single",isRunning:!1,showResults:!1,speed:50,arraySize:50,theme:"dark"});const _=["bubble","quick","merge","insertion","selection","heap","shell","cocktail","gnome","comb","cycle","pancake","counting","radix"];function h(e){return Array.from({length:e},()=>({value:Math.floor(Math.random()*100)+1,isComparing:!1,isSwapping:!1,isSorted:!1}))}function r(e){return new Promise(i=>setTimeout(i,e))}function k(e){e.stats={comparisons:0,swaps:0,startTime:null,endTime:null,isWinner:void 0}}function L(e,i){const n=e.stats.endTime-e.stats.startTime,g=i.stats.endTime-i.stats.startTime,o=n<=g?e.algorithm:i.algorithm,l=Math.abs(n-g),t=l/Math.max(n,g)*100;e.stats.isWinner=n<=g,i.stats.isWinner=g<n;const p=[];if(Math.abs(t)>50&&p.push(`${o} Sort was significantly faster (${t.toFixed(1)}% difference)`),e.stats.comparisons!==i.stats.comparisons){const c=e.stats.comparisons>i.stats.comparisons?e.algorithm:i.algorithm;p.push(`${c} Sort made more comparisons`)}if(e.stats.swaps!==i.stats.swaps){const c=e.stats.swaps>i.stats.swaps?e.algorithm:i.algorithm;p.push(`${c} Sort performed more swaps`)}return{winner:o,timeDifference:l,percentageDifference:t,primary:e.stats,secondary:i.stats,insights:p}}async function F(e,i,n){i.startTime=performance.now();const g=e.length;for(let o=0;o<g-1;o++){for(let l=0;l<g-o-1;l++){if(!a(s).isRunning)return;if(i.comparisons++,e[l].isComparing=!0,e[l+1].isComparing=!0,a(s).viewMode,u(e,n),await r(a(s).speed),e[l].value>e[l+1].value){i.swaps++,e[l].isSwapping=!0,e[l+1].isSwapping=!0,a(s).viewMode,u(e,n),await r(a(s).speed);const t=e[l];e[l]=e[l+1],e[l+1]=t}e[l].isComparing=!1,e[l+1].isComparing=!1,e[l].isSwapping=!1,e[l+1].isSwapping=!1}e[g-o-1].isSorted=!0,a(s).viewMode,u(e,n)}e[0].isSorted=!0,a(s).viewMode,u(e,n),i.endTime=performance.now()}async function D(e,i,n){i.startTime=performance.now();async function g(l,t){const p=e[t].value;let c=l-1;e[t].isComparing=!0,u(e,n),await r(a(s).speed);for(let T=l;T<t;T++){if(!a(s).isRunning)return c+1;if(e[T].isComparing=!0,u(e,n),await r(a(s).speed),i.comparisons++,e[T].value<p){c++,e[c].isSwapping=!0,e[T].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++;const O={...e[c]};e[c]={...e[T]},e[T]=O,u(e,n),await r(a(s).speed),e[c].isSwapping=!1,e[T].isSwapping=!1}e[T].isComparing=!1}e[t].isComparing=!1,e[c+1].isSwapping=!0,e[t].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++;const x={...e[c+1]};return e[c+1]={...e[t]},e[t]=x,e[c+1].isSwapping=!1,e[t].isSwapping=!1,e[c+1].isSorted=!0,u(e,n),c+1}async function o(l,t){if(l<t&&a(s).isRunning){const p=await g(l,t);await o(l,p-1),await o(p+1,t)}else l===t&&(e[l].isSorted=!0,u(e,n))}await o(0,e.length-1),i.endTime=performance.now()}async function S(e,i,n){i.startTime=performance.now();async function g(l,t,p){var X,ne;const c=t-l+1,x=p-t,T=Array.from({length:c},(le,K)=>({...e[l+K],isComparing:!1,isSwapping:!1,isSorted:!1})),O=Array.from({length:x},(le,K)=>({...e[t+1+K],isComparing:!1,isSwapping:!1,isSorted:!1}));let E=0,U=0,A=l;for(;E<c&&U<x&&a(s).isRunning;)e[l+E].isComparing=!0,e[t+1+U].isComparing=!0,u(e,n),await r(a(s).speed),i.comparisons++,T[E].value<=O[U].value?(e[A].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++,e[A]={...T[E],isSwapping:!0},u(e,n),await r(a(s).speed),e[A].isSwapping=!1,e[A].isSorted=!0,E++):(e[A].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++,e[A]={...O[U],isSwapping:!0},u(e,n),await r(a(s).speed),e[A].isSwapping=!1,e[A].isSorted=!0,U++),(X=e[l+E-1])!=null&&X.isComparing&&(e[l+E-1].isComparing=!1),(ne=e[t+1+U-1])!=null&&ne.isComparing&&(e[t+1+U-1].isComparing=!1),u(e,n),A++;for(;E<c&&a(s).isRunning;)e[A].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++,e[A]={...T[E],isSwapping:!0},u(e,n),await r(a(s).speed),e[A].isSwapping=!1,e[A].isSorted=!0,u(e,n),E++,A++;for(;U<x&&a(s).isRunning;)e[A].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++,e[A]={...O[U],isSwapping:!0},u(e,n),await r(a(s).speed),e[A].isSwapping=!1,e[A].isSorted=!0,u(e,n),U++,A++}async function o(l,t){if(l<t&&a(s).isRunning){const p=Math.floor((l+t)/2);await o(l,p),await o(p+1,t),await g(l,p,t)}else l===t&&(e[l].isSorted=!0,u(e,n))}await o(0,e.length-1),i.endTime=performance.now()}async function z(e,i,n){i.startTime=performance.now();const g=e.length;e[0].isSorted=!0,u(e,n);for(let o=1;o<g&&a(s).isRunning;o++){const l={...e[o]};let t=o-1;for(e[o].isComparing=!0,u(e,n),await r(a(s).speed);t>=0&&a(s).isRunning;){if(e[t].isComparing=!0,u(e,n),await r(a(s).speed),i.comparisons++,e[t].value>l.value)e[t].isSwapping=!0,e[t+1].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++,e[t+1]=e[t],u(e,n),await r(a(s).speed),e[t].isSwapping=!1,e[t+1].isSwapping=!1,t--;else{e[t].isComparing=!1;break}e[t+1].isComparing=!1}e[t+1]={...l,isSorted:!0},e[o].isComparing=!1,u(e,n),await r(a(s).speed)}for(let o=0;o<g;o++)e[o].isSorted=!0;u(e,n),i.endTime=performance.now()}async function R(e,i,n){i.startTime=performance.now();const g=e.length;for(let o=0;o<g-1&&a(s).isRunning;o++){let l=o;e[l].isComparing=!0,u(e,n),await r(a(s).speed);for(let t=o+1;t<g&&a(s).isRunning;t++)e[t].isComparing=!0,u(e,n),await r(a(s).speed),i.comparisons++,e[t].value<e[l].value?(e[l].isComparing=!1,l=t):e[t].isComparing=!1,u(e,n);if(l!==o){e[o].isSwapping=!0,e[l].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++;const t=e[o];e[o]=e[l],e[l]=t,e[o].isSwapping=!1,e[l].isSwapping=!1}e[o].isSorted=!0,e[o].isComparing=!1,l!==o&&(e[l].isComparing=!1),u(e,n),await r(a(s).speed)}e[g-1].isSorted=!0,u(e,n),i.endTime=performance.now()}async function C(e,i,n){i.startTime=performance.now(),e.length;async function g(o,l){let t=l;const p=2*l+1,c=2*l+2;if(e[l].isComparing=!0,p<o&&(e[p].isComparing=!0),c<o&&(e[c].isComparing=!0),u(e,n),await r(a(s).speed),i.comparisons+=2,p<o&&e[p].value>e[t].value&&(t=p),c<o&&e[c].value>e[t].value&&(t=c),e[l].isComparing=!1,p<o&&(e[p].isComparing=!1),c<o&&(e[c].isComparing=!1),t!==l&&a(s).isRunning){e[l].isSwapping=!0,e[t].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++;const x=e[l];e[l]=e[t],e[t]=x,e[l].isSwapping=!1,e[t].isSwapping=!1,u(e,n),await r(a(s).speed),await g(o,t)}}for(let o=Math.floor(e.length/2)-1;o>=0&&a(s).isRunning;o--)await g(e.length,o);for(let o=e.length-1;o>0&&a(s).isRunning;o--){e[0].isSwapping=!0,e[o].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++;const l=e[0];e[0]=e[o],e[o]=l,e[0].isSwapping=!1,e[o].isSwapping=!1,e[o].isSorted=!0,u(e,n),await r(a(s).speed),await g(o,0)}e[0].isSorted=!0,u(e,n),i.endTime=performance.now()}async function H(e,i,n){i.startTime=performance.now();const g=e.length;let o=Math.floor(g/2);for(;o>0&&a(s).isRunning;){for(let l=o;l<g;l++){const t={...e[l]};let p=l;for(e[l].isComparing=!0,u(e,n),await r(a(s).speed);p>=o&&a(s).isRunning;)if(e[p-o].isComparing=!0,u(e,n),await r(a(s).speed),i.comparisons++,e[p-o].value>t.value)e[p].isSwapping=!0,e[p-o].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++,e[p]={...e[p-o]},u(e,n),await r(a(s).speed),e[p].isSwapping=!1,e[p-o].isSwapping=!1,p-=o;else{e[p-o].isComparing=!1;break}e[p]=t,e[l].isComparing=!1,o===1&&(e[p].isSorted=!0),u(e,n)}o=Math.floor(o/2)}for(let l=0;l<g;l++)e[l].isSorted=!0;u(e,n),i.endTime=performance.now()}async function Z(e,i,n){i.startTime=performance.now();let g=0,o=e.length-1,l=!0;for(;l&&a(s).isRunning;){l=!1;for(let t=g;t<o;t++){if(e[t].isComparing=!0,e[t+1].isComparing=!0,u(e,n),await r(a(s).speed),i.comparisons++,e[t].value>e[t+1].value){e[t].isSwapping=!0,e[t+1].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++;const p={...e[t]};e[t]={...e[t+1]},e[t+1]=p,l=!0,u(e,n),await r(a(s).speed),e[t].isSwapping=!1,e[t+1].isSwapping=!1}e[t].isComparing=!1,e[t+1].isComparing=!1}if(e[o].isSorted=!0,o--,!l)break;l=!1;for(let t=o;t>=g;t--){if(e[t].isComparing=!0,e[t+1].isComparing=!0,u(e,n),await r(a(s).speed),i.comparisons++,e[t].value>e[t+1].value){e[t].isSwapping=!0,e[t+1].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++;const p={...e[t]};e[t]={...e[t+1]},e[t+1]=p,l=!0,u(e,n),await r(a(s).speed),e[t].isSwapping=!1,e[t+1].isSwapping=!1}e[t].isComparing=!1,e[t+1].isComparing=!1}e[g].isSorted=!0,g++}for(let t=g;t<=o;t++)e[t].isSorted=!0;u(e,n),i.endTime=performance.now()}async function Y(e,i,n){i.startTime=performance.now();let g=0;for(;g<e.length&&a(s).isRunning;){if(e[g].isComparing=!0,u(e,n),await r(a(s).speed),g===0||e[g].value>=e[g-1].value)e[g].isComparing=!1,e[g].isSorted=!0,g++;else{e[g].isSwapping=!0,e[g-1].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++;const o={...e[g]};e[g]={...e[g-1]},e[g-1]=o,u(e,n),await r(a(s).speed),e[g].isSwapping=!1,e[g-1].isSwapping=!1,e[g].isComparing=!1,g--}i.comparisons++}for(let o=0;o<e.length;o++)e[o].isSorted=!0;u(e,n),i.endTime=performance.now()}async function M(e,i,n){i.startTime=performance.now();const g=e.length;let o=g,l=1.3,t=!1;for(;!t&&a(s).isRunning;){o=Math.floor(o/l),o<=1&&(o=1,t=!0);for(let p=0;p+o<g;p++){if(e[p].isComparing=!0,e[p+o].isComparing=!0,u(e,n),await r(a(s).speed),i.comparisons++,e[p].value>e[p+o].value){e[p].isSwapping=!0,e[p+o].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++;const c={...e[p]};e[p]={...e[p+o]},e[p+o]=c,t=!1,e[p].isSwapping=!1,e[p+o].isSwapping=!1}e[p].isComparing=!1,e[p+o].isComparing=!1,o===1&&(e[p].isSorted=!0),u(e,n)}}for(let p=0;p<g;p++)e[p].isSorted=!0;u(e,n),i.endTime=performance.now()}async function N(e,i,n){i.startTime=performance.now();const g=e.length;for(let o=0;o<g-1&&a(s).isRunning;o++){let l=e[o],t=o;for(let p=o+1;p<g&&a(s).isRunning;p++)e[p].isComparing=!0,l.isComparing=!0,u(e,n),await r(a(s).speed),e[p].value<l.value&&t++,i.comparisons++,e[p].isComparing=!1,l.isComparing=!1,u(e,n);if(t===o){e[t].isSorted=!0,u(e,n);continue}for(;l.value===e[t].value&&t<g&&a(s).isRunning;)t++;if(t!==o&&a(s).isRunning){l.isSwapping=!0,e[t].isSwapping=!0,u(e,n),await r(a(s).speed);let p=e[t];e[t]=l,l=p,i.swaps++,l.isSwapping=!1,e[t].isSwapping=!1,e[t].isSorted=!0,u(e,n)}for(;t!==o&&a(s).isRunning;){t=o;for(let p=o+1;p<g&&a(s).isRunning;p++)e[p].isComparing=!0,l.isComparing=!0,u(e,n),await r(a(s).speed),e[p].value<l.value&&t++,i.comparisons++,e[p].isComparing=!1,l.isComparing=!1,u(e,n);for(;l.value===e[t].value&&t<g&&a(s).isRunning;)t++;if(l.value!==e[t].value&&a(s).isRunning){l.isSwapping=!0,e[t].isSwapping=!0,u(e,n),await r(a(s).speed);let p=e[t];e[t]=l,l=p,i.swaps++,l.isSwapping=!1,e[t].isSwapping=!1,e[t].isSorted=!0,u(e,n)}}}for(let o=0;o<g&&a(s).isRunning;o++)e[o].isSorted||(e[o].isSorted=!0,u(e,n),await r(a(s).speed/2));i.endTime=performance.now()}async function ie(e,i,n){i.startTime=performance.now();const g=e.length;async function o(l){let t=0,p=l;for(;t<p&&a(s).isRunning;){e[t].isSwapping=!0,e[p].isSwapping=!0,u(e,n),await r(a(s).speed),i.swaps++;const c={...e[t]};e[t]={...e[p]},e[p]=c,e[t].isSwapping=!1,e[p].isSwapping=!1,t++,p--}}for(let l=g;l>1&&a(s).isRunning;l--){let t=0;for(let p=0;p<l;p++)e[p].isComparing=!0,e[t].isComparing=!0,u(e,n),await r(a(s).speed),i.comparisons++,e[p].value>e[t].value?(e[t].isComparing=!1,t=p):e[p].isComparing=!1;t!==l-1&&(t!==0&&await o(t),await o(l-1)),e[l-1].isSorted=!0,u(e,n)}e[0].isSorted=!0,u(e,n),i.endTime=performance.now()}async function J(e,i,n){i.startTime=performance.now();const g=e.length,o=e.map(c=>({...c})),l=Math.max(...o.map(c=>c.value)),t=new Array(l+1).fill(0);for(let c=0;c<g&&a(s).isRunning;c++)o[c].isComparing=!0,e[c]={...o[c]},u(e,n),await r(a(s).speed),t[o[c].value]++,i.comparisons++,o[c].isComparing=!1,e[c]={...o[c]},u(e,n);for(let c=1;c<=l;c++)t[c]+=t[c-1];const p=new Array(g).fill(null).map(()=>({...o[0]}));for(let c=g-1;c>=0&&a(s).isRunning;c--){const x=o[c].value,T=t[x]-1;o[c].isSwapping=!0,e[c]={...o[c]},u(e,n),await r(a(s).speed),p[T]={...o[c],isSwapping:!1,isSorted:!0},t[x]--,i.swaps++;for(let O=0;O<g;O++)p[O]&&(e[O]={...p[O]});u(e,n),await r(a(s).speed)}for(let c=0;c<g;c++)e[c]={...p[c],isSorted:!0};u(e,n),i.endTime=performance.now()}async function V(e,i,n){i.startTime=performance.now();const g=e.length;let o=e[0].value;for(let l=1;l<g;l++)e[l].value>o&&(o=e[l].value);for(let l=1;Math.floor(o/l)>0&&a(s).isRunning;l*=10){const t=new Array(g).fill(null).map(()=>({value:0,isComparing:!1,isSwapping:!1,isSorted:!1})),p=new Array(10).fill(0);for(let c=0;c<g&&a(s).isRunning;c++){e[c].isComparing=!0,u(e,n),await r(a(s).speed);const x=Math.floor(e[c].value/l)%10;p[x]++,i.comparisons++,e[c].isComparing=!1,u(e,n)}for(let c=1;c<10;c++)p[c]+=p[c-1];for(let c=g-1;c>=0&&a(s).isRunning;c--){const x=Math.floor(e[c].value/l)%10;e[c].isSwapping=!0,u(e,n),await r(a(s).speed),t[p[x]-1]={...e[c]},p[x]--,i.swaps++,e[c].isSwapping=!1,u(e,n)}for(let c=0;c<g&&a(s).isRunning;c++)e[c]={...t[c],isComparing:!0},u(e,n),await r(a(s).speed),e[c].isComparing=!1;u(e,n)}for(let l=0;l<g&&a(s).isRunning;l++)e[l].isSorted=!0,u(e,n),await r(a(s).speed/2);i.endTime=performance.now()}async function oe(e,i){console.log(`Running ${e.algorithm} sort, isPrimary: ${i}`);const n=[...e.array];k(e);try{switch(e.algorithm){case"bubble":await F(n,e.stats,i);break;case"quick":await D(n,e.stats,i);break;case"merge":await S(n,e.stats,i);break;case"insertion":await z(n,e.stats,i);break;case"selection":await R(n,e.stats,i);break;case"heap":await C(n,e.stats,i);break;case"shell":await H(n,e.stats,i);break;case"cocktail":await Z(n,e.stats,i);break;case"gnome":await Y(n,e.stats,i);break;case"comb":await M(n,e.stats,i);break;case"cycle":await N(n,e.stats,i);break;case"pancake":await ie(n,e.stats,i);break;case"counting":await J(n,e.stats,i);break;case"radix":await V(n,e.stats,i);break;default:console.error("Unknown sorting algorithm:",e.algorithm);break}return console.log(`${e.algorithm} sort completed, stats:`,e.stats),i?y(s,a(s).primary.stats=e.stats):y(s,a(s).secondary.stats=e.stats),n}catch(g){throw console.error(`Error in ${e.algorithm} sort:`,g),g}}async function ce(){if(console.log("Starting sort process..."),console.log("Current view mode:",a(s).viewMode),a(s).isRunning){console.log("Sort already running, returning");return}if(y(s,a(s).isRunning=!0),y(s,a(s).showResults=!1),a(s).viewMode==="compare"){console.log("Starting compare mode sort");try{const e=h(a(s).arraySize);y(s,a(s).primary.array=e.map(g=>({...g}))),y(s,a(s).secondary.array=e.map(g=>({...g}))),y(s,a(s).primary.stats={startTime:null,endTime:null,comparisons:0,swaps:0,isWinner:void 0}),y(s,a(s).secondary.stats={startTime:null,endTime:null,comparisons:0,swaps:0,isWinner:void 0}),console.log("Starting parallel sorts");const[i,n]=await Promise.all([oe({algorithm:a(s).primary.algorithm,array:a(s).primary.array,stats:a(s).primary.stats},!0),oe({algorithm:a(s).secondary.algorithm,array:a(s).secondary.array,stats:a(s).secondary.stats},!1)]);y(s,a(s).primary.array=i),y(s,a(s).secondary.array=n),console.log("Sort completed, checking timing information"),console.log("Primary raw stats:",a(s).primary.stats),console.log("Secondary raw stats:",a(s).secondary.stats),typeof a(s).primary.stats.startTime=="number"&&typeof a(s).primary.stats.endTime=="number"&&typeof a(s).secondary.stats.startTime=="number"&&typeof a(s).secondary.stats.endTime=="number"?(console.log("Generating comparison results"),y(s,a(s).comparisonResult=L({algorithm:a(s).primary.algorithm,stats:{...a(s).primary.stats}},{algorithm:a(s).secondary.algorithm,stats:{...a(s).secondary.stats}})),console.log("Comparison results:",a(s).comparisonResult),await r(100),y(s,a(s).showResults=!0),console.log("Results modal should now be visible")):console.error("Invalid timing information:",{primary:{startTime:a(s).primary.stats.startTime,endTime:a(s).primary.stats.endTime},secondary:{startTime:a(s).secondary.stats.startTime,endTime:a(s).secondary.stats.endTime}})}catch(e){console.error("Error during compare sort:",e)}}else{console.log("Starting single view sort");try{const e=h(a(s).arraySize);y(s,a(s).array=e),y(s,a(s).primary.array=e),k(a(s)),k(a(s).primary);const i=a(s).primary.algorithm;console.log("Running single sort:",i);const n=await oe({algorithm:i,array:a(s).primary.array,stats:a(s).primary.stats},!0);u(n,!0)}catch(e){console.error("Error during single sort:",e)}}y(s,a(s).isRunning=!1),console.log("Sort process completed")}function P(){const e=h(a(s).arraySize);y(s,a(s).primary.array=[...e]),a(s).viewMode==="compare"&&y(s,a(s).secondary.array=[...e]),y(s,a(s).isRunning=!1)}function be(){y(s,a(s).viewMode=a(s).viewMode==="single"?"compare":"single"),P()}function Ce(e){y(s,a(s).arraySize=e),P()}function Bs(){y(s,a(s).isRunning=!1)}function Xe(){y(s,a(s).theme=a(s).theme==="dark"?"light":"dark"),document.body.classList.toggle("light-theme")}function ue(){y(s,a(s).showResults=!1)}nt(()=>{P(),window.matchMedia("(prefers-color-scheme: light)").matches&&Xe()});function u(e,i){const n=e.map(g=>({...g}));a(s).viewMode==="compare"?i?y(s,a(s).primary.array=n):y(s,a(s).secondary.array=n):(y(s,a(s).array=n),y(s,a(s).primary.array=n))}it();var ve=It();at(e=>{Za.title="Sorting Visualizer"});var ke=m(ve),Ze=m(ke),Te=m(Ze),Re=m(Te),fe=m(Re);$(()=>{a(s),Rs(()=>{})}),ye(fe,5,()=>_,xe,(e,i)=>{var n=ft(),g={},o=m(n);$(()=>b(o,`${a(i).charAt(0).toUpperCase()+a(i).slice(1)} Sort`)),f(n),$(()=>{g!==(g=a(i))&&(n.value=(n.__value=a(i))==null?"":a(i))}),I(e,n)}),f(fe);var Pe=w(fe,2),es=m(Pe),Hs=w(es,2);{var Vs=e=>{var i=mt(),n=m(i),g=m(n);$(()=>b(g,`${a(s).primary.algorithm.charAt(0).toUpperCase()+a(s).primary.algorithm.slice(1)} Sort`)),f(n);var o=w(n,2),l=m(o,!0);f(o);var t=w(o,2),p=m(t),c=w(m(p),2),x=m(c,!0);f(c),f(p);var T=w(p,2),O=w(m(T),2),E=m(O,!0);f(O),f(T),f(t),f(i),$(()=>{b(l,se[a(s).primary.algorithm].description),b(x,se[a(s).primary.algorithm].timeComplexity),b(E,se[a(s).primary.algorithm].spaceComplexity)}),B("mouseleave",i,()=>y(s,a(s).primary.showInfo=!1)),I(e,i)};j(Hs,e=>{a(s).primary.showInfo&&e(Vs)})}f(Pe),f(Re);var js=w(Re,2);{var Gs=e=>{var i=_t(),n=m(i);$(()=>{a(s),Rs(()=>{})}),ye(n,5,()=>_,xe,(p,c)=>{var x=wt(),T={},O=m(x);$(()=>b(O,`${a(c).charAt(0).toUpperCase()+a(c).slice(1)} Sort`)),f(x),$(()=>{T!==(T=a(c))&&(x.value=(x.__value=a(c))==null?"":a(c))}),I(p,x)}),f(n);var g=w(n,2),o=m(g),l=w(o,2);{var t=p=>{var c=ht(),x=m(c),T=m(x);$(()=>b(T,`${a(s).secondary.algorithm.charAt(0).toUpperCase()+a(s).secondary.algorithm.slice(1)} Sort`)),f(x);var O=w(x,2),E=m(O,!0);f(O);var U=w(O,2),A=m(U),X=w(m(A),2),ne=m(X,!0);f(X),f(A);var le=w(A,2),K=w(m(le),2),_e=m(K,!0);f(K),f(le),f(U),f(c),$(()=>{b(E,se[a(s).secondary.algorithm].description),b(ne,se[a(s).secondary.algorithm].timeComplexity),b(_e,se[a(s).secondary.algorithm].spaceComplexity)}),B("mouseleave",c,()=>y(s,a(s).secondary.showInfo=!1)),I(p,c)};j(l,p=>{a(s).secondary.showInfo&&p(t)})}f(g),f(i),zs(n,()=>a(s).secondary.algorithm,p=>y(s,a(s).secondary.algorithm=p)),B("click",o,()=>y(s,a(s).secondary.showInfo=!a(s).secondary.showInfo)),I(e,i)};j(js,e=>{a(s).viewMode==="compare"&&e(Gs)})}f(Te);var Ae=w(Te,2),ss=m(Ae),as=m(ss),me=w(as);Os(me),f(ss),f(Ae);var Me=w(Ae,2),ts=m(Me),ns=m(ts),Oe=w(ns);Os(Oe),f(ts),f(Me);var is=w(Me,2),$e=m(is),Ie=w($e,2),ze=w(Ie,2),ge=w(ze,2),Ys=m(ge,!0);f(ge);var Ee=w(ge,2),Ks=m(Ee,!0);f(Ee),f(is),f(Ze),f(ke);var we=w(ke,2),he=m(we),os=m(he);{var Qs=e=>{var i=yt(),n=m(i);$(()=>b(n,`${a(s).primary.algorithm.charAt(0).toUpperCase()+a(s).primary.algorithm.slice(1)} Sort `));var g=w(n);{var o=l=>{var t=xt();I(l,t)};j(g,l=>{a(s).primary.stats.isWinner&&l(o)})}f(i),I(e,i)};j(os,e=>{a(s).viewMode==="compare"&&e(Qs)})}var ls=w(os,2);ye(ls,5,()=>a(s).primary.array,xe,(e,i)=>{var n=St();$(()=>{te(n,"style",`height: ${a(i).value??""}%; width: ${100/a(s).arraySize}%`),te(n,"data-value",a(i).value),te(n,"data-padding",a(i).isPadding||void 0),G(n,"comparing",a(i).isComparing),G(n,"swapping",a(i).isSwapping),G(n,"sorted",a(i).isSorted)}),I(e,n)}),f(ls),f(he);var Js=w(he,2);{var Xs=e=>{var i=kt(),n=m(i),g=m(n);$(()=>b(g,`${a(s).secondary.algorithm.charAt(0).toUpperCase()+a(s).secondary.algorithm.slice(1)} Sort `));var o=w(g);{var l=p=>{var c=bt();I(p,c)};j(o,p=>{a(s).secondary.stats.isWinner&&p(l)})}f(n);var t=w(n,2);ye(t,5,()=>a(s).secondary.array,xe,(p,c)=>{var x=Ct();$(()=>{te(x,"style",`height: ${a(c).value??""}%; width: ${100/a(s).arraySize}%`),te(x,"data-value",a(c).value),te(x,"data-padding",a(c).isPadding||void 0),G(x,"comparing",a(c).isComparing),G(x,"swapping",a(c).isSwapping),G(x,"sorted",a(c).isSorted)}),I(p,x)}),f(t),f(i),$(()=>G(i,"winner",a(s).secondary.stats.isWinner)),I(e,i)};j(Js,e=>{a(s).viewMode==="compare"&&e(Xs)})}f(we);var Zs=w(we,2);{var Ps=e=>{var i=$t(),n=m(i),g=m(n),o=w(m(g),2);f(g);var l=w(g,2),t=m(l),p=m(t);f(t);var c=w(t,2),x=m(c),T=m(x),O=m(T);f(T);var E=w(T,2),U=w(m(E),2),A=m(U);$(()=>b(A,`${(a(s).primary.stats.endTime-a(s).primary.stats.startTime).toFixed(2)??""}ms`)),f(U),f(E);var X=w(E,2),ne=w(m(X),2),le=m(ne,!0);f(ne),f(X);var K=w(X,2),_e=w(m(K),2),ea=m(_e,!0);f(_e),f(K);var sa=w(K,2);{var aa=W=>{var ee=Tt();I(W,ee)};j(sa,W=>{a(s).primary.stats.isWinner&&W(aa)})}f(x);var ps=w(x,2),We=m(ps),ta=m(We);f(We);var qe=w(We,2),cs=w(m(qe),2),na=m(cs);$(()=>b(na,`${(a(s).secondary.stats.endTime-a(s).secondary.stats.startTime).toFixed(2)??""}ms`)),f(cs),f(qe);var Le=w(qe,2),vs=w(m(Le),2),ia=m(vs,!0);f(vs),f(Le);var De=w(Le,2),gs=w(m(De),2),oa=m(gs,!0);f(gs),f(De);var la=w(De,2);{var pa=W=>{var ee=Rt();I(W,ee)};j(la,W=>{a(s).secondary.stats.isWinner&&W(pa)})}f(ps),f(c);var rs=w(c,2),Ne=m(rs),Ue=w(m(Ne),2),ds=w(m(Ue),2);const ca=As(()=>a(s).comparisonResult.timeDifference.toFixed(2)??""),va=As(()=>a(s).comparisonResult.percentageDifference.toFixed(1)??"");var ga=m(ds);$(()=>b(ga,`${a(ca)}ms (${a(va)}%)`)),f(ds),f(Ue);var Fe=w(Ue,2),us=w(m(Fe),2),ra=m(us);f(us),f(Fe);var fs=w(Fe,2),ms=w(m(fs),2),da=m(ms);f(ms),f(fs),f(Ne);var Be=w(Ne,2),He=w(m(Be),2),Ve=m(He),ua=m(Ve);f(Ve);var ws=w(Ve,2),fa=m(ws,!0);f(ws),f(He);var hs=w(He,2),je=m(hs),ma=m(je);f(je);var _s=w(je,2),wa=m(_s,!0);f(_s),f(hs),f(Be);var xs=w(Be,2),ys=w(m(xs),2),ha=m(ys);{var _a=W=>{var ee=At();I(W,ee)},xa=W=>{var ee=ka(),Sa=et(ee);{var ba=pe=>{var Ge=Mt();I(pe,Ge)},Ca=pe=>{var Ge=Ot();I(pe,Ge)};j(Sa,pe=>{a(s).arraySize<100?pe(ba):pe(Ca,!1)},!0)}I(W,ee)};j(ha,W=>{a(s).arraySize<50?W(_a):W(xa,!1)})}f(ys),f(xs),f(rs),f(l);var Ss=w(l,2),ya=m(Ss);f(Ss),f(n),f(i),$(()=>{G(i,"hidden",!a(s).showResults),b(p,`üèÜ Winner: ${a(s).comparisonResult.winner??""} Sort`),b(O,`${a(s).primary.algorithm??""} Sort`),b(le,a(s).primary.stats.comparisons),b(ea,a(s).primary.stats.swaps),b(ta,`${a(s).secondary.algorithm??""} Sort`),b(ia,a(s).secondary.stats.comparisons),b(oa,a(s).secondary.stats.swaps),b(ra,`${a(s).primary.stats.comparisons??""} vs ${a(s).secondary.stats.comparisons??""}`),b(da,`${a(s).primary.stats.swaps??""} vs ${a(s).secondary.stats.swaps??""} swaps`),b(ua,`${a(s).primary.algorithm??""}:`),b(fa,se[a(s).primary.algorithm].timeComplexity),b(ma,`${a(s).secondary.algorithm??""}:`),b(wa,se[a(s).secondary.algorithm].timeComplexity)}),B("click",o,ue),B("click",ya,ue),B("click",n,rt(function(W){dt.call(this,d,W)})),B("click",i,ue),B("keydown",i,W=>W.key==="Escape"&&ue()),I(e,i)};j(Zs,e=>{a(s).showResults&&a(s).comparisonResult&&e(Ps)})}f(ve),$(()=>{G(ve,"light-theme",a(s).theme==="light"),G(ve,"showResults",a(s).showResults),b(as,`Array Size: ${a(s).arraySize??""} `),me.disabled=a(s).isRunning,b(ns,`Speed: ${a(s).speed??""}ms `),Oe.disabled=a(s).isRunning,$e.disabled=a(s).isRunning,Ie.disabled=!a(s).isRunning,ze.disabled=a(s).isRunning,ge.disabled=a(s).isRunning,b(Ys,a(s).viewMode==="single"?"Compare":"Single View"),b(Ks,a(s).theme==="dark"?"‚òÄÔ∏è":"üåô"),G(we,"compare-mode",a(s).viewMode==="compare"),G(he,"winner",a(s).primary.stats.isWinner)}),zs(fe,()=>a(s).primary.algorithm,e=>y(s,a(s).primary.algorithm=e)),B("click",es,()=>y(s,a(s).primary.showInfo=!a(s).primary.showInfo)),Is(me,()=>a(s).arraySize,e=>y(s,a(s).arraySize=e)),B("change",me,()=>Ce(a(s).arraySize)),Is(Oe,()=>a(s).speed,e=>y(s,a(s).speed=e)),B("click",$e,ce),B("click",Ie,Bs),B("click",ze,P),B("click",ge,be),B("click",Ee,Xe),I(v,ve),Xa()}export{Ut as component,Nt as universal};
